// cheack Typical Matrices 
namespace problem12 {
	int RandomNumber(int From, int To) {
		return rand() % (To - From + 1) + From;
	}
	void FillRandomMatrix(int arr[3][3], short row, short column) {
		for (short i = 0; i < row; i++) {
			for (short x = 0; x < column; x++) {
				arr[i][x] = RandomNumber(1, 10);
			}
		}
	}
	void PrintMatrix(int arr[3][3], short row, short column) {
		for (short i = 0; i < row; i++) {
			for (short x = 0; x < column; x++) {
				printf(" %0*d   ", 2, arr[i][x]);
			}
			cout << endl;
		}
	}
	string cheackMatrices(int Matrix1[][3],int Matrix2[][3], short row, short column) {
		for (short i = 0; i < row; i++) {
			for (short x = 0; x < column; x++) {
				if (Matrix1[i][x] == Matrix2[i][x]){
					
				}	
				else {
					cout << "NOOOOOOOOOOO the Matrices are not equal : " << endl;
					return " ";
				}
					
			}
		}
		cout << "Yesssssssssssss the Matrices are equal : " << endl;
		return " ";
		
	}
}
//_________________________________________________________________________________________________

int main(){
  int Matrix1[3][3], Matrix2[3][3];
	problem12::FillRandomMatrix(Matrix1, 3, 3);
	cout << "Matrix 1 :" << endl;
	problem12::PrintMatrix(Matrix1, 3, 3);

	problem12::FillRandomMatrix(Matrix2, 3, 3);
	cout << "Matrix 1 :" << endl;
	problem12::PrintMatrix(Matrix2, 3, 3);

	problem12::cheackMatrices(Matrix1, Matrix2, 3, 3);
}

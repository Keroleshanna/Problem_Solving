// Check Sparse Matrix
namespace problem16 {
	// 0	0	8
	// 10	0	0
	// 9	0	0   if there is 0's more than any number   that is sparse matrix
	void PrintMatrix(int arr[3][3], short row, short column) {
		for (short i = 0; i < row; i++) {
			for (short x = 0; x < column; x++) {
				cout << arr[i][x] << "   ";
			}
			cout << endl;
		}
	}
	bool checkSparseMatrixOrNot(int Matrix[][3], short row, short column) {
		int countNumber = 0;
		int AllNumbersOfMatrix = row * column;
		for (short i = 0; i < row; i++) {
			for (short x = 0; x < column; x++) {
				if (Matrix[i][x] == 0)
					countNumber++;
			}
		}

		if (countNumber > AllNumbersOfMatrix / 2)
			return true;
		else
			return false;
	}
}
//________________________________________________________________________________

int main(){
  int Matrix1[3][3] = { {5, 0, 0}, {0, 5, 0}, {0, 0, 5} };
	int Matrix1[3][3] = { {1, 4, 6}, {2, 0, 0}, {0, 5, 0} };

	cout << "Matrix is :" << endl;
	problem16::PrintMatrix(Matrix1, 3, 3);

	
	if (problem16::checkSparseMatrixOrNot(Matrix1, 3, 3))
		cout << "This Matrix is Sparse " << endl;
	else
		cout << "This Matrix is not Sparse " << endl;
 }
